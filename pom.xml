<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.garxin.springcloud</groupId>
	<artifactId>parent</artifactId>
	<version>1.0-SNAPSHOT</version>

	<url>https://github.com/garxin/garxin-spring-cloud</url>
	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<docker.image.prefix>garxin</docker.image.prefix>
		<docker.plugin.version>0.4.13</docker.plugin.version>
		<mapper.version>3.4.0</mapper.version>
		<maven.compile.source>1.8</maven.compile.source>
		<maven.compile.target>1.8</maven.compile.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<modules>
		<module>parent-component</module>
		<module>parent-midware</module>
	</modules>

	<packaging>pom</packaging>

	<developers>
		<developer>
			<name>garxin</name>
			<email>94254011@qq.com</email>
		</developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.33</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.0</version>
		</dependency>
	</dependencies>

	<!--依赖管理，用于管理spring-cloud的依赖，其中Camden.SR3是版本号 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Finchley.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<distributionManagement>
		<repository>
			<id>nexus-releases</id>
			<url>
                http://192.168.31.91:8081/repository/maven-releases/
            </url>
		</repository>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<url>
                http://192.168.31.91:8081/repository/maven-snapshots/
            </url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${maven.compile.source}</source>
					<target>${maven.compile.target}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>

			<!-- 我的电脑没有装docker所以这个地方需要注销掉，否则打包时会报错 <plugin> <groupId>com.spotify</groupId> 
				<artifactId>docker-maven-plugin</artifactId> <version>${docker.plugin.version}</version> 
				<executions> <execution> <phase>package</phase> <goals> <goal>build</goal> 
				</goals> </execution> </executions> <configuration> <imageName>${docker.image.prefix}/${project.build.finalName}</imageName> 
				<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory> <resources> 
				<resource> <targetPath>/</targetPath> <directory>${project.build.directory}</directory> 
				<include>${project.build.finalName}.jar</include> </resource> </resources> 
				</configuration> </plugin> -->
		</plugins>
	</build>
</project>